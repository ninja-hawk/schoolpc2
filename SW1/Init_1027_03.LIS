                         4 .list
                         5 ***************************************************************
                         6 ** 各種レジスタ定義
                         7 ***************************************************************
                         8 
                         9 ***************
                        10 ** レジスタ群の先頭
                        11 ***************
                        12 .equ REGBASE, 0xFFF000  | DMAP を使用.
                        13 .equ IOBASE,  0x00d00000
                        14 
                        15 ***************
                        16 ** 割り込み関係のレジスタ
                        17 ***************
                        18 .equ IVR,     REGBASE+0x300 | 割り込みベクタレジスタ
                        19 .equ IMR,     REGBASE+0x304 | 割り込みマスクレジスタ
                        20 .equ ISR,     REGBASE+0x30c | 割り込みステータスレジスタ
                        21 .equ IPR,     REGBASE+0x310 | 割り込みペンディングレジスタ
                        22 
                        23 
                        24 ***************
                        25 ** タイマ関係のレジスタ
                        26 ***************
                        27 .equ TCTL1,   REGBASE+0x600 | タイマ1コントロールレジスタ
                        28 .equ TPRER1,  REGBASE+0x602 | タイマ1プリスケーラレジスタ
                        29 .equ TCMP1,   REGBASE+0x604 | タイマ1コンペアレジスタ
                        30 .equ TCN1,    REGBASE+0x608 | タイマ1カウンタレジスタ
                        31 .equ TSTAT1,  REGBASE+0x60a | タイマ1ステータスレジスタ
                        32 ***************
                        33 ** UART1 (送受信)関係のレジスタ
                        34 ***************
                        35 .equ USTCNT1, REGBASE+0x900 | UART1 ステータス / コントロールレジスタ
                        36 .equ UBAUD1,  REGBASE+0x902 | UART1 ボーコントロールレジスタ
                        37 .equ URX1,    REGBASE+0x904 | UART1 受信レジスタ
                        38 .equ UTX1,    REGBASE+0x906 | UART1 送信レジスタ
                        39 ***************
                        40 ** LED
                        41 ***************
                        42 .equ LED7,  IOBASE+0x000002f | ボード搭載のLED用レジスタ
                        43 .equ LED6,  IOBASE+0x000002d | 使用法については付録 A.4.3.1
                        44 .equ LED5,  IOBASE+0x000002b
                        45 .equ LED4,  IOBASE+0x0000029
                        46 .equ LED3,  IOBASE+0x000003f
                        47 .equ LED2,  IOBASE+0x000003d
                        48 .equ LED1,  IOBASE+0x000003b
                        49 .equ LED0,  IOBASE+0x0000039
                        50 
                        51 ***************************************************************
                        52 ** スタック領域の確保
                        53 ***************************************************************
                        54 .section .bss
                        55 .even
                        56 SYS_STK:
0004dc 0000 0000        57 		.ds.b  0x4000 | システムスタック領域
       0000 0000        57 
       0000 0000        57 
       0000 0000        57 
       0000 0000        57 
                        58 		.even
                        59 SYS_STK_TOP: 		      | システムスタック領域の最後尾
                        60 
                        61 ***************************************************************
                        62 ** 初期化
                        63 ** 内部デバイスレジスタには特定の値が設定されている.
                        64 ** その理由を知るには,付録 B にある各レジスタの仕様を参照すること.
                        65 ***************************************************************
                        66 .section .text
                        67 .even
                        68 boot:
                        69 		* スーパーバイザ & 各種設定を行っている最中の割込禁止
000400 46FC 2000        70 		move.w #0x2000,%SR
000404 4FF9 0000        71 		lea.l SYS_STK_TOP, %SP | Set SSP
       0000             71 
                        72 		****************
                        73 		** 割り込みコントローラの初期化
                        74 		****************
00040a 13FC 0040        75 		move.b #0x40, IVR      | ユーザ割り込みベクタ番号を
       00FF F300        75 
                        76 		                       | 0x40+level に設定.
000412 23FC 00FF        77 		move.l #0x00fffffb,IMR | 全割り込みマスク
       FFFB 00FF        77 
       F304             77 
                        78 		****************
                        79 		** 送受信 (UART1) 関係の初期化 ( 割り込みレベルは 4 に固定されている )
                        80 		****************
00041c 21FC 0000        81 		move.l #UART1_interrupt, 0x110  | 受信割り込みベクタをセット
       0000 0110        81 
000424 33FC 0000        82 		move.w #0x0000, USTCNT1 | リセット
       00FF F900        82 
00042c 33FC E138        83 		move.w #0xe138, USTCNT1 | 送受信可能 , パリティなし , 1 stop, 8 bit, /* 変更 */
       00FF F900        83 
                        84 					| 受信割り込み許可, 送割り込み禁止
000434 13FC 0034        85 		move.b #'4', LED4
       00D0 0029        85 
00043c 33FC 0038        86 		move.w #0x0038, UBAUD1  | baud rate = 230400 bps
       00FF F902        86 
                        87 		****************
                        88 		** タイマ関係の初期化 ( 割り込みレベルは 6 に固定されている )
                        89 		*****************
000444 13FC 0034        90 		move.b #'4', LED3
       00D0 003F        90 
00044c 33FC 0004        91 		move.w #0x0004, TCTL1   | restart, 割り込み不可 ,
       00FF F600        91 
                        92 					| システムクロックの 1/16 を単位として計時,
                        93 					| タイマ使用停止
000454 13FC 0034        94 		move.b #'4', LED2
       00D0 003D        94 
00045c 6000 0058        95 		bra MAIN
                        96 
                        97 *************************************
                        98 ** UART1_interrupt
                        99 *************************************
                       100 UART1_interrupt:
000460 0839 000F       101 		btst.l #15, UTX1      |  15ビット目は送信キューが空であるか
       00FF F906       101 
000468 6600 000A       102 		bne    CALL_INTERGET  |  if UTX1[15] == 1 (空のとき)
00046c 4EBA 0008       103 		jsr    INTERPUT
000470 6000 0002       104 		bra    END_interrupt
                       105 CALL_INTERGET:
                       106 		*jsr   INTERGET
                       107 END_interrupt:
000474 4E73            108 		rte
                       109 
                       110 *************************************
                       111 ** INTERPUT :  送信割り込み時の処理	
                       112 ** 引数     :  %d1.l = チャネル(ch)	
                       113 *************************************
                       114 INTERPUT:
000476 13FC 0031       115 		move.b  #'1', LED7
       00D0 002F       115 
00047e 46FC 2700       116 		move.w  #0x2700, %SR | 走行レベルを７に設定
000482 0C81 0000       117 		cmpi.l  #0, %d1      | ch = 0 を確認
       0000            117 
000488 6600 0020       118 		bne     END_INTERPUT | if ch != 0 => 復帰
                       119 		/* OUTQがあるとして... */
00048c 4EBA 001E       120 		jsr     OUTQ_STUB    | %d1.b = data
000490 0C40 0000       121 		cmpi    #0, %d0      | %d0(OUTQの戻り値) == 0(失敗)
000494 6600 000A       122 		bne     TX_DATA      | ==> 送信割り込みをマスク(真下)
000498 33FC E138       123 		move.w  #0xe138, USTCNT1
       00FF F900       123 
                       124 TX_DATA:
0004a0 0641 0800       125 		add.w   #0x0800, %d1
0004a4 33C1 00FF       126 		move.w  %d1, UTX1
       F906            126 
                       127 END_INTERPUT:
0004aa 4E73            128 		rte
                       129 
                       130 *********************************
                       131 ** OUTQ_STUB
                       132 *********************************
                       133 OUTQ_STUB:
0004ac 1238 0061       134 		move.b  'a', %d1
                       135 		*move.b #0, %d0
0004b0 103C 0001       136 		move.b  #1, %d0
0004b4 4E75            137 		rts
                       138 		
                       139 		
                       140 		
                       141 		
                       142 ***************************************************************
                       143 ** 現段階での初期化ルーチンの正常動作を確認するため,最後に ’a’ を
                       144 ** 送信レジスタ UTX1 に書き込む. ’a’ が出力されれば, OK.
                       145 ***************************************************************
                       146 .section .text
                       147 .even
                       148 MAIN:
0004b6 13FC 0033       149 		move.b #'3', LED5
       00D0 002B       149 
0004be 33FC 0841       150 	        move.w #0x0800+'A', UTX1
       00FF F906       150 
0004c6 13FC 0032       151 		move.b #'2', LED6
       00D0 002D       151 
                       152 		
                       153 LOOP:
0004ce 13FC 0033       154 		move.b #'3', LED3
       00D0 003F       154 
0004d6 6000 FFF6       155 		bra LOOP		
                       156 
                       157 
