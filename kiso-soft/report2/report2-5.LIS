                         4 .list
                         5 *******************************
                         6 ** メモリ破壊（Drawing characters)
                         7 *******************************
                         8 .section .text
                         9 start:
000400 41F9 0000        10 	lea.l   DATA0,%a0       /* 描画する絵の先頭アドレスをa0に格納*/
       0000             10 
000406 43F9 0000        11 	lea.l   VIEWTOP,%a1     /* 描画する領域の先頭アドレスをa1に格納*/
       0000             11 
00040c 45F9 0000        12 	lea.l   CONTROL,%a2     /* 制御用コードの先頭アドレスをa2に格納*/
       0000             12 
                        13 
000412 4EBA 001E        14 	jsr     INIT            /* 背景を描画するサブルーチンに分岐*/
000416 4EBA 0032        15 	jsr     DRAW            /* 描画領域の左上を初期位置として絵を描画*/
                        16 
                        17 LOOP1:
00041a 0C12 0004        18 	cmp.b   #4, (%a2)       /* 制御用コードを見て終了（4）を判定*/
00041e 6700 000E        19 	beq     end_of_program
                        20 
000422 4EBA 0048        21 	jsr     UPDATE          /* 描画位置の更新*/
000426 4EBA 0022        22 	jsr     DRAW            /* 更新された位置（正しくは方向）に絵を描画*/
00042a 6000 FFEE        23 	bra     LOOP1
                        24 
                        25 end_of_program:
00042e 4E72 2700        26 	stop    #0x2700         /* プログラムの終了*/
                        27 
                        28 ************************************
                        29 ** 背景を#INITCHARで埋める
                        30 ** 引数：%a1 = 背景となるデータ領域の先頭アドレス
                        31 ** #AREASIZE = 描画領域の大きさ
                        32 ************************************
                        33 INIT:
000432 48E7 8040        34 	movem.l %d0/%a1,-(%a7)  /* このサブルーチンで使うレジスタを退避*/
000436 303C 0100        35 	move.w  #AREASIZE,%d0
                        36 LOOP2:
00043a 12FC 00EE        37 	move.b  #INITCHAR,(%a1)+
00043e 5340             38 	subq.w  #1,%d0
000440 6600 FFF8        39 	bne     LOOP2
                        40 	
000444 4CDF 0201        41 	movem.l (%a7)+,%d0/%a1  /* レジスタの回復*/
000448 4E75             42 	rts
                        43 *************************************
                        44 ** DRAW
                        45 ** 引数：
                        46 **	%a0=動かす絵の先頭アドレス
                        47 **	%a1=絵を描画する領域の先頭アドレス（描画位置）
                        48 *************************************
                        49 DRAW:
00044a 48E7 C0C0        50 	movem.l %d0-%d1/%a0-%a1,-(%a7) /* レジスタの退避*/
                        51 
00044e 7004             52 	moveq.l #LENGTHX,%d0
000450 7204             53 	moveq.l #LENGTHY,%d1
                        54 
                        55 LOOP3:
000452 12D8             56 	move.b  (%a0)+,(%a1)+
000454 5340             57 	subq.w  #1,%d0
000456 6600 FFFA        58 	bne     LOOP3
                        59 
00045a D2FC 000C        60 	adda.w  #16-LENGTHX,%a1
00045e 7004             61 	moveq.l #LENGTHX,%d0
000460 5341             62 	subq.w  #1,%d1
000462 6600 FFEE        63 	bne     LOOP3
000466 4CDF 0303        64 	movem.l (%a7)+, %d0-%d1/%a0-%a1 /* レジスタの回復*/
00046a 4E75             65 	rts
                        66 
                        67 *************************************
                        68 ** 制御コードによる絵の位置情報（アドレス）の更新
                        69 ** 引数
                        70 **   %a2=現在の制御コードが格納してあるアドレス
                        71 ** 戻り値
                        72 **   %a1=絵を描画する領域の先頭アドレス（位置）
                        73 *************************************
                        74 UPDATE:
00046c 0C12 0000        75 	cmpi.b  #0,(%a2)                /* 右に動かす*/
000470 6700 001A        76 	beq     RIGHT
000474 0C12 0001        77 	cmpi.b  #1,(%a2)                /* 左に動かす*/
000478 6700 001A        78 	beq     LEFT
00047c 0C12 0002        79 	cmpi.b  #2,(%a2)                /* 上に動かす*/
000480 6700 001A        80 	beq     UP
000484 0C12 0003        81 	cmpi.b  #3,(%a2)                /* 下に動かす*/
000488 6700 001A        82 	beq     DOWN
                        83 RIGHT:
00048c D2FC 0001        84 	adda.w  #1,%a1
000490 6000 001A        85 	bra     FINISH
                        86 LEFT:
000494 92FC 0001        87 	suba.w  #1,%a1
000498 6000 0012        88 	bra     FINISH
                        89 UP:
00049c 92FC 0010        90 	suba.w  #0x10,%a1
0004a0 6000 000A        91 	bra     FINISH
                        92 DOWN:
0004a4 D2FC 0010        93 	adda.w  #0x10,%a1
0004a8 6000 0002        94 	bra     FINISH
                        95 
                        96 FINISH:
0004ac D4FC 0001        97 	adda.w  #1,%a2
0004b0 4E75             98 	rts
                        99 .section .data
                       100 ***********************************
                       101 ** Data Area
                       102 ***********************************
                       103 	.equ    LENGTHX, 4      /* 描画する絵の横幅（バイト単位）*/
                       104 	.equ    LENGTHY, 4      /* 描画する絵の縦幅（バイト単位）*/
                       105 	.equ    INITCHAR, 0xee  /* 背景に使う”文字(0x00-0xff) */
                       106 	.equ    AREASIZE, 0x100 /* 描画に使用する領域の大きさ*/
                       107 
0004b4 EEEE EEEE       108 DATA0:  .dc.b   INITCHAR,INITCHAR,INITCHAR,INITCHAR     /* 描画する絵の一部*/
0004b8 EE44 77EE       109 DATA1:  .dc.b   INITCHAR,0x44,0x77,INITCHAR             /* 描画する絵の一部*/
0004bc EE44 77EE       110 DATA2:  .dc.b   INITCHAR,0x44,0x77,INITCHAR             /* 描画する絵の一部*/
0004c0 EEEE EEEE       111 DATA3:  .dc.b   INITCHAR,INITCHAR,INITCHAR,INITCHAR     /* 描画する絵の一部*/
                       112 
                       113 *CONTROL:.dc.b	0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,0,0,0,0,
0004c4 0000 0000       114 CONTROL:.dc.b 0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4       /* 絵の制御用コード*/
       0000 0002       114 
       0202 0202       114 
       0202 0202       114 
       0202 0202       114 
                       115 
0004db 0000 0000       116 VIEWTOP:        .ds.b   AREASIZE                /* 領域の確保*/
       0000 0000       116 
       0000 0000       116 
       0000 0000       116 
       0000 0000       116 
                       117 
                       118 .end
