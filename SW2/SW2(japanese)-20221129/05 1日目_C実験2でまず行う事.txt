1日目の目標：実験環境の整備、すべきことの確認

1. mtk フォルダ内の mtk-hina.tgz を各自のホームフォルダ内にコピーし、そこで展開する。
   -> mtk フォルダが生成され、mtk フォルダ以下にいくつかファイルが展開される。

2. C実験1 の成果物（簡易OS）をmtk フォルダ内にコピーし、簡易OSのファイル名を mon.s に変更する。

それ以降は、mtk フォルダ内の作業となる
  ・mon.s へのラベル、jmp 命令の追加　(テキスト p.13 1.3.2節)
  ・inchrw.s 内に inbyte の実装     (テキスト p.14 1.4.1節)
  ・outchr.s 内に outbyte の実装    (テキスト p.15 1.4.2節)
　・test1.c の新規生成
      ・Cの動作テストプログラムを main() 関数内に記述する、
　　　・テストプログラムはループさせ、繰り返し実行させること
  ・make test1 で test1.abs の生成、実機上で実行 (テキスト p.15 1.4.3節)

注意事項
　・mon.s 中のハードウェア初期化開始時点とハードウェア初期化終了時点を見極めること。
　・jmp monitor_begin　でハードウェア初期化開始位置に移動し、jmp start でハードウェア
    初期化から復帰の後は、Cプログラムの main() 実行までCライブラリ初期化となるので、
　　初期化されたハードウェアの機能を有効にする操作をjmp startで復帰する前に組み込んでおくこと。
　・Cプログラムの main() に記述するテストプログラムコードは、1回実行して停止するコードではなく、
    何回も繰り返し実行させてシステムに負荷をかけても正常動作するかを確かめるコードにすること。
　　（無限ループ内にテストコードを記述する形にすること。） 
　　※ 1回実行して停止するテストコードは評価対称としない。
 　・1.4.2節の記述 "システムコール～が成功しなかった場合はリトライする必要がある"は、1.4.1節にも適用される。
   ・簡易OS mon.s 内の作業領域は使用禁止。理由はテーマ2で実装する内容を考慮すれば自ずと問題として浮き上がる。

実験範囲外事項
　・アセンブリ言語の疑似命令 .equ は文字列置き換え機能であり、変数名や関数名の様にアドレスを伴うラベルを生成しないので、
    .extern で外部ファイルのラベル参照を指定しても思った通りには機能しない。
    → .equ を逐次再定義するしかない。または .include の適用
 
