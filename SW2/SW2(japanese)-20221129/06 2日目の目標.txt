2日目の目標：テーマ1の完成
・まだ共同作業ではない。班内等で相談はしても最終的には個人作業である。

・make test1 でglisファイルの作成時間が未来である云々のメッセージが出るが、気にしない。

・inbyte(), outbyte() を呼べば、1文字入出力が確実に行える様に作成せよ。
　システムコールの入出力仕様の知識が必要。

・アセンブラ記述関数について
　これらの関数内操作で破壊されるレジスタの内容は、予め退避させること。(テキスト p.12)
　ただし、Ｄ0レジスタは戻り値格納に使用されるので、事前退避の必要は無い。
　保存する必要の無いレジスタを無駄に退避しない。
　関数内で退避、復帰させるレジスタの数が一致していること。

・outbyte() 抜きで inbyte() の動作を確認する方法→LEDに出力する
　テキスト p.40 2.5.5節 注意事項 の 6. 項を用いて、1文字入力文字情報をLED0 に書き込む

・outbyte() の引数へのアクセス
　テキスト p.11 やOHP No.6にあるように、関数呼び出し側の引数設定から呼び出された関数の先頭に至るまでの処理は、
	引数の符号拡張 & スタック積み込み
	関数呼び出し
	呼び出された関数先頭でのレジスタ退避（必要に応じて）
　等があるので、各命令でスタックがどう変動するかを図示しながら確認せよ。
  ここで検討用に作成した図はレポート作成に生かすこと。
　また、実機のCPU 68000系列はビッグエンディアン(big endian)であることを考慮せよ。

・モニタの不出来による不良、モニタ内の作業領域の利用禁止は、テキスト p.16 注意1,2を遵守せよ。

◎inbyte(), outbyte() は問題無さそうなのにうまく動作しない場合→　モニタの不具合を考慮に入れる
　1. SW2/mtk/mon_r2.tar.gz を入手して作業フォルダで展開
　2. mon_r/ 以下の mon_r.o または mon_r2.o を作業フォルダにコピー
　3. mon_r.o または mon_r2.o を mon.o にコピーの後、touch 実行

　置き換え方法は、端末画面で以下に準じた操作を行う
（作業フォルダと展開場所の関係で異なる場合あり）
        $ cd 作業フォルダ
        $ rm mon.o
        $ cp mon_r/mon_r.o mon.o
        $ touch mon.o

        $ make test1

　mon.o 置換えに関する説明：
    touch mon.o により、mon.o のファイル作成時間を現在に変更する。
    これにより、mon.s よりも mon.o の方が新しいファイルとなり、
    make の生成規則から mon.o を mon.s から作り直す必要なしとみなされ、
    差替えた mon.o を組み込んだ test1.abs が作成される
 
・test1.c の内容: main() 関数を含み、文字入出力に関するテストプログラムをCで記述せよ。
　ただし、プログラム終了は考慮されていないのでテストコードを無限ループ内に記述せよ。
　※テーマ1の主目的が何だったかを踏まえ、何の動作テストをすればいいのかを考慮しなさい。
